[{"Library":"ms5611","Description":"Barometric Pressure Sensor library","Sensor Class":{"MS5611":{"Name":"Barometric Pressure and Temperature Sensor","Description":"The MS5611 is a high pressure sensor and temperatre sensor module. The main function is to convert the uncompensated analogue voltage from the pressure die to a 24bit digital value, as well as providing a 24 bit value for the temperature ","Aliases":["ms5611"],"Categories":["pressure","temperature"],"Connections":["i2c"],"Project Type":["prototyping","industrial"],"Manufacturers":["amsys"],"Image":"","Examples":{"C++":["ms5611.cxx"]},"Specifications":{"Vdd":{"unit":"v","low":1.8,"high":3.6},"Pressure Range":{"unit":"mbar","low":10,"high":1200},"Temperature Range":{"unit":"C","low":-40,"high":85}},"Platforms":{"Intel Joule Module":{"Notes":["might need pull up resistors"],"Images":["mpu9150.jpg","wheelencoder.jpg"]}},"Urls":{"Product Pages":["http://www.amsys.info/products/ms5611.htm"],"Datasheets":["http://www.amsys.info/sheets/amsys.en.ms5611_01ba03.pdf"]}}}},{"Library":"si1132","Description":"UV and visible light sensor library","Sensor Class":{"SI1132":{"Name":"UV and visible light sensor","Description":"The SI1132 sensor determines real-time UV sun exposure and cumulative UV sun exposure and enables accurate light level monitoring under mixed lightings","Aliases":["si1132"],"Categories":["light"],"Connections":["i2c"],"Project Type":["prototyping","industrial"],"Manufacturers":["silabs"],"Kits":[],"Image":"","Examples":{"C++":["si1132.cxx"]},"Specifications":{"Vdd":{"unit":"v","low":1.7,"high":3.6},"Iavg":{"unit":"µA","high":1.2},"Temperature Range":{"unit":"C","low":-40,"high":85}},"Platforms":{"Intel Joule Module":{"Notes":["might need pull up resistors"]}},"Urls":{"Product Pages":["http://www.silabs.com/products/sensors/optical/si1132"],"Datasheets":["https://www.silabs.com/documents/public/data-sheets/Si1132.pdf"]}}}},{"Library":"sx1276","Description":"Semtech SX1276 LoRa/FSK Modem Library","Sensor Class":{"SX1276":{"Name":"Semtech SX1276 LoRa/FSK Module","Description":"The SX1276 is a FSK/OOK/LoRa modem capable of both Low Frequency and High Frequency communication. It requires a 3.3v power supply, do not use 5v. Frequency Hopping Spread Spectrum (FHSS) is not currently supported.","Aliases":["sx1276"],"Categories":["radio"],"Connections":["gpio","spi"],"Project Type":["industrial"],"Manufacturers":["semtech"],"Examples":{"Python":["sx1276-fsk.py","sx1276-lora.py"],"Node.js":["sx1276-fsk.js","sx1276-lora.js"],"C++":["sx1276-fsk.cxx","sx1276-lora.cxx"]},"Specifications":{"VDDmr":{"unit":"V","min":-0.5,"max":3.9},"VDDop":{"unit":"V","min":1.8,"max":3.7},"Tmr":{"unit":"°C","min":-55,"max":115},"Top":{"unit":"°C","min":-40,"max":85},"IDDsl":{"unit":"uA","typ":0,"max":1},"IDDidle":{"unit":"uA","typ":1.5},"IDDst":{"unit":"mA","typ":1.6,"max":1.8},"IDDfs":{"unit":"mA","typ":5.8},"IDDr":[{"Conditions":"LnaBoost Off, band 1","unit":"mA","typ":10.8},{"Conditions":"LnaBoost On, band 1","unit":"mA","typ":11.5},{"Conditions":"bands 2 & 3","unit":"mA","typ":12.0}],"IDDt":[{"Conditions":"RFOP +20 dBm on PA_BOOST","unit":"mA","typ":120},{"Conditions":"RFOP +17 dBm on PA_BOOST","unit":"mA","typ":87},{"Conditions":"RFOP +13 dBm on RFO_LH/RH pin","unit":"mA","typ":29},{"Conditions":"RFOP +7 dBm on RFO_LH/RH pin","unit":"mA","typ":20}],"LoRaWAN Band":"US915","Range":"Claimed > 10km","Packet Size":{"unit":"bytes","max":256}},"Platforms":{"Intel Edison":{"Notes":["Power using 3.3 V","Power using 3.4 V","Power using 3.5 V"],"Images":["mpu9150.jpg","wheelencoder.jpg"]},"Arduino 101":{"Notes":["Power using 3.3 V"],"Images":["led.jpg","md.jpg"]},"Intel C1000":{"Notes":["Power using 3.3 V"],"Images":["mic.jpg","es9257.jpg"]}},"Urls":{"Product Pages":["http://www.semtech.com/wireless-rf/rf-transceivers/sx1276/"],"Datasheets":["http://www.semtech.com/images/datasheet/sx1276.pdf"]}}}},{"Library":"tmp006","Description":"Texas Instruments Infrared-Thermopile Sensor Library","Sensor Class":{"TMP006":{"Name":"Infrared-Thermopile Sensor","Description":" * The TMP006 and TMP006B are fully integrated MEMs thermopile sensors that measure the temperature of an object without having to be in direct contact. The thermopile absorbs passive infrared energy from an object at wavelengths between 4 um to 16 um within the end-user defined field of view. The corresponding change in voltage across the thermopile is digitized and reported with the on-chip die thermal sensor measurement through an I2C- and SMBus-compatible interface. With this data, the target object temperature can be calculated by an external processor. The Infrared thermopile sensor is specified to operate from -40 to +125 [degC]. It is possible to measure an object temperature beyond the device operating range as long as the device itself does not exceed the operating temperature range (-40 to +125 [degC]).","Aliases":["tmp006"],"Categories":["temperature"],"Connections":["i2c"],"Project Type":["prototyping"],"Manufacturers":["texas instruments"],"Examples":{"Python":["tmp006.py"],"C++":["tmp006.cxx"]},"Specifications":{"Vsupply":{"unit":"V","min":2.2,"max":5.5},"Iactive":{"unit":"uA","typ":240},"Ishutdown":{"unit":"uA","max":1},"Temperature Range":{"unit":"°C","min":-40,"max":127}},"Platforms":{"Intel Joule Module":{"Notes":["NA"]},"Intel Edison":{"Notes":["NA"]},"Intel Galileo Gen 2":{"Notes":["NA"]}},"Urls":{"Product Pages":["http://www.ti.com/product/TMP006"],"Datasheets":["http://www.ti.com/lit/ds/sbos518e/sbos518e.pdf"]}}}},{"Library":"hlg150h","Description":"Light Controller Library","Sensor Class":{"HLG150H":{"Name":"Lighting Power Supply Controller","Description":"HLG series single output LED power supply features universal AC input, protection for short circuit, overload, over voltage and over temperature","Aliases":["hlg150h"],"Categories":["light controller"],"Connections":["pwm"],"Project Type":["prototyping","industrial"],"Manufacturers":["meanwell"],"Image":"hlg150h.jpg","Examples":{"C++":["hlg150h.cxx"]},"Specifications":{"Vdd":{"unit":"v","low":1.7,"high":3.6},"Ioff":{"unit":"mA","low":0.0,"high":0.0},"Iavg":{"unit":"mA","low":1,"high":2},"Pressure Range":{"unit":"hpA","low":300,"high":1100},"Voltage Range":{"unit":"C","low":-40,"high":85}},"Platforms":{"Intel Joule Module":{"Notes":["Might need pull up resistors"]}},"Urls":{"Product Pages":["https://www.meanwell-web.com/en/product-info/ac-dc-power-supply/led-driver/101-180-w-led-driver/hlg-150h/product/HLG-150H-24B"],"Datasheets":["http://www.mouser.com/ds/2/260/r1755_3-1109742.pdf"],"Schematics":["http://www.mouser.com/ds/2/260/HLG-150H-SPEC-806071.pdf"]}}}},{"Library":"mpu9150","Description":"IMU Library","Sensor Class":{"MPU9150":{"Name":"Inertial Measurement Unit","Description":"The Grove IMU 9DOF is a 9 axis IMU module based on the MPU-9150. The MPU-9150 is an integrated nine degree of freedom motion tracking device designed for the low power, low cost, and high performance requirements of consumer electronics equipment including smartphones, tablets and wearable sensors. MPU-9150 features three 16-bit ADCs for digitizing the gyroscope outputs, three 16-bit ADCs for digitizing the accelerometer outputs, and three 13-bit ADCs for digitizing the magnetometer outputs. It features an I2C interface.","Aliases":["mpu9150","IMU 9DOF v1.0"],"Categories":["accelerometer","compass","gyroscope"],"Connections":["i2c","gpio"],"Project Type":["prototyping"],"Manufacturers":["seeed"],"Image":"mpu9150.jpg","Examples":{"Java":["MPU9150Sample.java"],"Python":["mpu9150.py"],"Node.js":["mpu9150.js"],"C++":["mpu9150.cxx"]},"Specifications":{"Vdd":{"unit":"v","constant":5},"V_i2c_bus":{"unit":"v","constant":5},"I2C Bus Speed":{"unit":"KHz","typical":400},"Gyro Full-Scale Range":{"unit":"+/- degrees / sec","low":250,"high":2000},"Accelerometer Full-Scalse Range":{"unit":"+/- g","low":2,"high":16},"Gyro Resolution":{"unit":"bits","constant":16},"Accelerometer Resolution":{"unit":"bits","constant":16},"Magnetometer Resolution":{"unit":"bits","constant":13}},"Urls":{"Product Pages":["https://www.seeedstudio.com/Grove-IMU-9DOF-v2.0-p-2400.html"],"Datasheets":["http://wiki.seeedstudio.com/wiki/Grove_-_IMU_9DOF_v1.0","http://wiki.seeedstudio.com/images/5/51/MPU-9150.pdf"],"Schematics":["http://www.seeedstudio.com/wiki/File:Grove_-_IMU_9DOF_V1.0_sch_pcb.zip"]}}}},{"Library":"max44009","Description":"Ambient Light Sensor Library","Sensor Class":{"MAX44009":{"Name":"Digital Humidity, Pressure, and Temperature Sensor","Description":"The MAX44009 ambient light sensor features an i2c digital output that is ideal for a number of portable applications such as smartphones, notebooks and industrial sensors","Aliases":["max44009"],"Categories":["light"],"Connections":["i2c"],"Project Type":["prototyping","industrial"],"Manufacturers":["Maxim integrated"],"Image":"","Examples":{"C++":["max44009.cxx"]},"Specifications":{"Vdd":{"unit":"v","low":1.7,"high":3.6},"Temperature Range":{"unit":"C","low":-40,"high":85},"Dynamic Range":{"unit":"lux","low":0.045,"high":188000}},"Platforms":{"Intel Joule Module":{"Notes":["might need pull up resistors"]}},"Urls":{"Product Pages":["https://www.maximintegrated.com/en/products/analog/sensors-and-sensor-interface/MAX44009.html"],"Datasheets":["https://datasheets.maximintegrated.com/en/ds/MAX44009.pdf"]}}}},{"Library":"veml6070","Description":"Vishay VEML6070 UVA Light Sensor Library","Sensor Class":{"VEML6070":{"Name":"VEML6070 UV Light Sensor","Description":"VEML6070 is an advanced ultraviolet (UV) light sensor with I2C protocol interface and designed by the CMOS process. It is easily operated via a simple I2C command. The active acknowledge (ACK) feature with threshold windows setting allows the UV sensor to send out a UVI alert message. Under a strong solar UVI condition, the smart ACK signal can be easily implemented by the software programming. VEML6070 incorporates a photodiode, amplifiers, and analog / digital circuits into a single chip. VEML6070's adoption of FiltronTM UV technology provides the best spectral sensitivity to cover UV spectrum sensing. It has an excellent temperature compensation and a robust refresh rate setting that does not use an external RC low pass filter. VEML6070 has linear sensitivity to solar UV light and is easily adjusted by an external resistor. Software shutdown mode is provided, which reduces power consumption to be less than 1 uA. VEML6070's operating voltage ranges from 2.7 V to 5.5 V.","Aliases":["veml6070"],"Categories":["light"],"Connections":["i2c"],"Project Type":["prototyping"],"Manufacturers":["vishay"],"Examples":{"Java":["VEML6070Sample.java"],"Python":["veml6070.py"],"Node.js":["veml6070.js"],"C++":["veml6070.cxx"],"C":["veml6070.c"]},"Specifications":{"Vdd":{"unit":"V","min":2.7,"max":5.5},"Idd":{"unit":"uA","typ":100,"max":250},"UVA Detection Power":{"unit":"mW/cm2","max":328}},"Platforms":{"Intel Joule Module":{"Notes":["NA"]},"Intel Edison":{"Notes":["NA"]}},"Urls":{"Product Pages":["http://www.vishay.com/ppg?84277"],"Datasheets":["http://www.vishay.com/docs/84277/veml6070.pdf"]}}}},{"Library":"temperature","Description":"Temperature sensor library","Sensor Class":{"Temperature":{"Name":"Analog Temperature Sensor","Description":"Basic UPM module for analog temperature sensors. These sensors use a NTC thermistor to measure ambient temperature. This driver was developed using the Grove Temperature Sensor. The conversion formula has been updated to work with versions 1.1 and 1.2 of the sensor. For the older v1.0 sensor you will have to specify R0 and B values when initializing the device. The range of this sensor is -40 to 125 C and accuracy is +/- 1.5 C.","Aliases":["Grove - Temperature Sensor"],"Categories":["temperature"],"Connections":["analog"],"Project Type":["prototyping","industrial"],"Manufacturers":["seeed","dfrobot","sparkfun","adafruit","generic"],"Kits":["gsk"],"Image":"temp.jpg","Examples":{"Java":["TemperatureSample.java"],"Python":["temperature.py"],"Node.js":["temperature.js"],"C++":["temperature.cxx"]},"Platforms":{"Arduino 101":{"Notes":["Will need to adjust ADC scale when used with Grove Base Shield (see API documentation)."]}},"Urls":{"Product Pages":["http://wiki.seeed.cc/Grove-Temperature_Sensor_V1.2/"],"Datasheets":["https://github.com/SeeedDocument/Grove-Temperature_Sensor_V1.2/raw/master/res/NCP18WF104F03RC.pdf"],"Schematics":["https://easyeda.com/Seeed/Grove_Temperature_sensor_v1_2-ed433e462f14455e9aa38ae1a06e4680"]}}}},{"Library":"wheelencoder","Description":"Wheel Encoder Library","Sensor Class":{"WheelEncoder":{"Name":"Wheel Encoder","Description":"Wheel encoders use non-contact methods to give rotation information. This sensor was developed for the DFRobot Wheel Encoder, though it could be used for any counting time-based task. When you instantiate a class of this type, the gpio pin specified is connected to an interrupt. Whenever a low to high transition occurs on the gpio pin, the internal counter is incremented by one. This class also includes a millisecond counter, so that you can correlate the number of counts to a time period for calculating an RPM or other value as needed.","Aliases":["SEN0038"],"Categories":["other"],"Connections":["gpio"],"Project Type":["prototyping"],"Manufacturers":["dfrobot"],"Kits":["DFRobot 3PA","DFRobot 4WD"],"Image":"wheelencoder.jpg","Examples":{"Python":["wheelencoder.py"],"Node.js":["wheelencoder.js"],"C++":["wheelencoder.cxx"],"C":["wheelencoder.c"]},"Specifications":{"Vdd":{"unit":"v","constant":5},"Itotal":{"unit":"mA","high":20},"Resolution":{"unit":"ppr","constant":20}},"Urls":{"Product Pages":["https://www.dfrobot.com/product-98.html"],"Datasheets":["https://www.dfrobot.com/wiki/index.php/Wheel_Encoders_for_DFRobot_3PA_and_4WD_Rovers_(SKU:SEN0038)"],"Schematics":["http://www.dfrobot.com/wiki/images/b/b9/FIT0029_Encoder_Schematics.png"]}}}},{"Library":"md","Description":"I2C Motor Driver Library","Sensor Class":{"MD":{"Name":"I2C Motor Driver","Description":"The Grove I2C Motor Driver is an I2C motor driver that supports a single 4-wire stepper motor, or two 2-wire DC motors. The device contains an Atmel* ATmega8L microcontroller that manages an L298N H-bridge driver chip. For stepper operation, this driver can run in one of two modes - Mode 1, where this driver handles the stepping operation, and Mode 2, where this driver simply sends commands to the Grove Motor Driver, and it handles the stepping operation. Mode2 requires updated (and working) firmware to be loaded onto the device. The default stepper operation mode is Mode1, which is generally more flexible and is supported on all firmware revisions.","Aliases":["I2C Motor Driver v1.3"],"Categories":["motor"],"Connections":["i2c"],"Project Type":["prototyping"],"Manufacturers":["seeed"],"Kits":["robok"],"Image":"md.jpg","Examples":{"Java":["MDSample.java"],"Python":["md.py","md-stepper.py"],"Node.js":["md.js","md-stepper.js"],"C++":["md.cxx","md-stepper.cxx"],"C":["md.c","md-stepper.c"]},"Specifications":{"Vdd":{"unit":"v","low":6,"high":15},"Itotal":{"unit":"A","high":1.0},"Ichannel":{"unit":"mA","high":500},"V_i2c_bus":{"unit":"v","constant":5},"I2C Bus Speed":{"unit":"KHz","constant":100}},"Urls":{"Product Pages":["https://www.seeedstudio.com/Grove-I2C-Motor-Driver-p-907.html"],"Datasheets":["http://wiki.seeed.cc/Grove-I2C_Motor_Driver_V1.3"],"Schematics":["https://github.com/SeeedDocument/Grove-I2C_Motor_Driver_V1.3/raw/master/res/Grove%20-%20I2C%20Motor%20Driver%20%20v1.3b.pdf"]}}}},{"Library":"abp","Description":"Honeywell Basic Amplified Board mount Pressure(ABP) Sensor Library","Sensor Class":{"ABP":{"Name":"Honeywell ABP Pressure and Temperature Sensors","Description":"This is the UPM Module for the ABP Honeywell Pressure and Temp sensor. This sensor uses an onboard ASIC to output values of pressure that are updated at approximately 2 KHz. It is capable of detecting pressure in the 0-5 psi range and it has an i2c based interface. Temperature calculation using this driver is possible but not all ABP sensors support that functionality.","Aliases":["abp"],"Categories":["pressure","temperature"],"Connections":["i2c"],"Project Type":["medical","industrial","commercial"],"Manufacturers":["honeywell"],"Examples":{"Python":["abp.py"],"Node.js":["abp.js"],"C++":["abp.cxx"],"C":["abp.c"]},"Specifications":{"Vsupply":{"unit":"Vdc","min":-0.3,"max":6.0},"Supply Current Digital":{"3.3 Vdc":{"unit":"mA","min":"0.0","max":"3.9"},"5.0 Vdc":{"unit":"mA","min":"0.0","max":"4.6"},"Sleep Mode":{"unit":"uA","min":"0.0","max":"10"}},"Operating Temperature":{"unit":"°C","min":-40,"max":85},"Start up Time Digital":{"unit":"ms","time":3},"Response Time Digital":{"unit":"ms","time":0.46},"Compensated Temperature Range":{"unit":"°C","min":0,"max":50},"Pressure Range":{"Differential":[{"unit":"mbar","min":60,"max":4000},{"unit":"kPa","min":6,"max":400},{"unit":"psi","min":1,"max":60}],"Gage":[{"unit":"mbar","min":0,"max":10000},{"unit":"kPa","min":0,"max":1000},{"unit":"psi","min":0,"max":150}]}},"Platforms":{"Intel Joule Module":{"Notes":["Might need pull up resistors"]},"Intel Edison":{"Notes":["Might need pull up resistors"]},"Arduinon 101":{"Notes":["Might need pull up resistors"]}},"Urls":{"Product Pages":["https://sensing.honeywell.com/sensors/amplified-board-mount-pressure-sensors/basic-abp-series"],"Datasheets":["https://sensing.honeywell.com/honeywell-sensing-basic-board-mount-pressure-abp-series-datasheet-2305128-e-en.pdf"]}}}},{"Library":"led","Description":"LED library","Sensor Class":{"Led":{"Name":"Light-emitting Diode (LED)","Description":"UPM module for the LED (or other similar light-emitting diodes). An LED is a p-n junction semiconductor which emits light in response to voltage. The longer wire of an LED connects to the positive seat (anode); the shorter wire connects to the negative seat (cathode). The flat side of the bulb corresponds to the cathode, while the rounded side corresponds to the anode.","Aliases":["Grove - LED"],"Categories":["led"],"Connections":["gpio"],"Project Type":["prototyping","industrial"],"Manufacturers":["seeed","dfrobot","sparkfun","adafruit","generic"],"Kits":["gsk"],"Image":"led.jpg","Examples":{"Java":["LEDSample.java"],"Python":["led.py"],"Node.js":["led.js"],"C++":["led.cxx"],"C":["led.c"]},"Urls":{"Product Pages":["http://wiki.seeed.cc/Grove-LED_Socket_Kit/"],"Schematics":["https://github.com/SeeedDocument/Grove-LED_Socket_Kit/raw/master/res/Grove-LED_v1.3_Schematics.zip"]}}}},{"Library":"mic","Description":"Generic analog microphone library","Sensor Class":{"Microphone":{"Name":"Analog Microphone","Description":"This module defines the Analog Microphone sensor.","Aliases":["Grove - Sound Sensor"],"Categories":["sound"],"Connections":["analog"],"Project Type":["prototyping","industrial"],"Manufacturers":["seeed","dfrobot","sparkfun","adafruit","generic"],"Kits":["gsk"],"Image":"mic.jpg","Examples":{"Java":["MicrophoneSample.java"],"Python":["mic.py"],"Node.js":["mic.js"],"C++":["mic.cxx"]},"Urls":{"Product Pages":["http://www.seeedstudio.com/wiki/Grove_-_Sound_Sensor"],"Schematics":["https://github.com/SeeedDocument/Grove_Sound_Sensor/raw/master/res/Grove%20-%20Sound%20Sensor%20v1.6%20Schematic.pdf"]}}}},{"Library":"rsc","Description":"Honeywell TruStability Pressure and Temperature Sensor Library","Sensor Class":{"RSC":{"Name":"SPI based Board Mount Pressure and Temperature","Description":"The RSC Series is a piezoresistive silicon pressure sensor offering a digital output for reading pressure over the specified full scale pressure span and temperature range. It is calibrated and temperature compensated for sensor offset, sensitivity, temperature effects, and non-linearity using a 24-bit analog-todigital converter with integrated EEPROM. Pressure data may be acquired at rates between 20 and 2000 samples per second over an SPI interface. It is intended for use with non-corrosive, non-ionic gases, such as air and other dry gases, designed and and RoHS compliant. Most of the functionality available on this chip has been implemented. The driver calculates the compensated pressure and temperature values based on the information provided in the datasheet. The user must not mess around with the coefficient and adc init value readings from the EEPROM as these are used to calculate the compensated pressure and temperature values. In order to get the sensor to work properly on an Edison, you would need to turn off the Edison SPI power management, this can be done with the command: echo on > /sys/devices/pci0000\\:00/0000\\:00\\:07.1/power/control. You might have to use external pull up resistors on all the lines. More info about this has been provided in the datasheet with a table and a diagram.","Aliases":["rsc"],"Categories":["pressure","temperature"],"Connections":["gpio","spi"],"Project Type":["medical","industrial","extended"],"Manufacturers":["Honeywell"],"Kits":[],"Examples":{"Python":["rsc.py"],"Node.js":["rsc.js"],"C++":["rsc.cxx"],"C":["rsc.c"]},"Specifications":{"Vsupply":{"unit":"Vdc","min":2.7,"high":6.0},"Supply Current(3.3 Vdc)":{"unit":"mA","standby":1.3,"active":1.7},"Supply Current(5.0 Vdc)":{"unit":"mA","standby":2.1,"active":2.6},"Operating Temperature":{"unit":"°C","min":-40,"max":85},"Start up Time":{"unit":"ms","time":0.3},"Compensated Temperature Range (Medical)":{"unit":"°C","min":0,"max":50},"Compensated Temperature Range (Industrial)":{"unit":"°C","min":-20,"max":85},"Compensated Temperature Range (Extended)":{"unit":"°C","min":-40,"max":85},"Data Rate":{"unit":"samples per second","min":20,"max":2000},"Pressure Range":{"Absolute":[{"unit":"bar","min":0,"max":10},{"unit":"kPa","min":0,"max":600},{"unit":"MPa","min":0,"max":1},{"unit":"psi","min":0,"max":150}],"Differential":[{"unit":"mbar","min":1.6,"max":600},{"unit":"bar","min":1,"max":10},{"unit":"Pa","min":160,"max":600},{"unit":"kPa","min":1,"max":600},{"unit":"MPa","max":1},{"unit":"inH2O","min":0.5,"max":30},{"unit":"psi","min":1,"max":150}],"Gage":[{"unit":"mbar","min":0,"max":600},{"unit":"bar","min":0,"max":10},{"unit":"Pa","min":0,"max":600},{"unit":"kPa","min":0,"max":600},{"unit":"MPa","min":0,"max":1},{"unit":"inH2O","min":0,"max":30},{"unit":"psi","min":0,"max":150}]}},"// Platforms":{"comment":"Catch-all for listing platforms used to validate this sensor class.","required":false},"Platforms":{"Intel Joule Module":{"Notes":["Might Require pull-up resistors or use a shield instead"]},"Intel Edison":{"Notes":["Turn of SPI power management to use the sensor. Turn it off using the command : echo on > /sys/devices/pci0000\\:00/0000\\:00\\:07.1/power/control"]},"Arduino 101":{"Notes":["Might need pull up resistors or a shield"]}},"Urls":{"Product Pages":["https://sensing.honeywell.com/sensors/amplified-board-mount-pressure-sensors/trustability-rsc-series"],"Datasheets":["https://sensing.honeywell.com/honeywell-sensing-trustability-rsc-series-data-sheet-32321348-b-en.pdf"]}}}},{"Library":"Servo","Description":"Servo Library","Sensor Class":{"ES9257":{"Name":"Micro Digital 3D Tail Servo","Description":"The ES9257 servo is a fast, heavy duty servo that is popular for moving control surfaces on RC models.","Aliases":["ES9257"],"Categories":["servos"],"Connections":["pwm"],"Project Type":["prototyping"],"Manufacturers":["emax"],"Image":"es9257.jpg","Examples":{"C":["servo.c"]},"Specifications":{"Vdd":{"unit":"v","typical":4.8},"Stall Torque":{"unit":"Kgf.cm","low":2.5},"Operating Speed (no load)":{"unit":"sec / 60 deg","max":0.08},"Pulse Cycle":{"unit":"ms","typical":3}},"Urls":{"Product Pages":["https://www.seeedstudio.com/EMAX-ES9257-2.5kg%26amp%3B-.05-sec-Micro-Digital-3D-Tail-Servo-p-762.html"]}}}},{"Library":"bmp280","Description":"Bosch Atmospheric Sensor Library","Sensor Class":{"BME280":{"Name":"Digital Humidity, Pressure, and Temperature Sensor","Description":"The BME280 is as combined digital humidity, pressure and temperature sensor based on proven sensing principles. The sensor module is housed in an extremely compact metal-lid LGA package with a footprint of only 2.5 * 2.5 mm2 with a height of 0.93 mm. Its small dimensions and its low power consumption allow the implementation in battery driven devices such as handsets, GPS modules or watches. The BME280 is register and performance compatible to the Bosch Sensortec BMP280 digital pressure sensor","Aliases":["bme280","Grove - Barometer Sensor(BME280)"],"Categories":["pressure","humidity","temperature"],"Connections":["gpio","i2c","spi"],"Project Type":["prototyping","industrial"],"Manufacturers":["adafruit","seeed","bosch"],"Image":"bmp280.jpg","Examples":{"Java":["BMP280_Example.java"],"Python":["bmp280.py"],"Node.js":["bmp280.js"],"C++":["bmp280.cxx"],"C":["bmp280.c"]},"Specifications":{"Vdd":{"unit":"v","low":1.7,"high":3.6},"Ioff":{"unit":"mA","low":0.0,"high":0.0},"Iavg":{"unit":"mA","low":1,"high":2},"Pressure Range":{"unit":"hpA","low":300,"high":1100},"Temperature Range":{"unit":"C","low":-40,"high":85}},"Platforms":{"Intel Joule Module":{"Notes":["Requires pull-up resistors with carrier board"]}},"Urls":{"Product Pages":["https://www.adafruit.com/products/2652"],"Datasheets":["https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BME280_DS001-11.pdf"],"Schematics":["https://learn.adafruit.com/assets/26693"]}},"BMP280":{"Name":"Digital Pressure Sensor","Description":"The BMP280 is an absolute barometric pressure sensor especially designed for mobile applications. The sensor module is housed in an extremely compact 8-pin metal-lid LGA package with a footprint of only 2.0 * 2.5 mm2 and 0.95 mm package height. Its small dimensions and its low power consumption of 2.7 uA @1Hz allow the implementation in battery driven devices such as mobile phones, GPS modules or watches. As the successor to the widely adopted BMP180, the BMP280 delivers high performance in all applications that require precise pressure measurement. The BMP280 operates at lower noise, supports new filter modes and an SPI interface within a footprint 63% smaller than the BMP180.","Aliases":["bmp280","Grove - Barometer Sensor (BMP280)"],"Categories":["pressure","humidity","temperature"],"Connections":["gpio","i2c","spi"],"Project Type":["prototyping","industrial"],"Manufacturers":["adafruit","seeed","bosch"],"Image":"bmp280.jpg","Examples":{"Java":["BME280_Example.java","BME280_InterfaceExample"],"Python":["bme280.py"],"Node.js":["bme280.js"],"C++":["bmp280-bme280.cxx"],"C":["bmp280-bme280.c"]},"Specifications":{"Vdd":{"unit":"v","low":1.7,"high":3.6},"Ioff":{"unit":"mA","low":0.0,"high":0.0},"Iavg":{"unit":"mA","low":1,"high":2},"Pressure Range":{"unit":"hpA","low":300,"high":1100},"Temperature Range":{"unit":"C","low":-40,"high":85}},"Platforms":{"Intel Joule Module":{"Notes":["Requires pull-up resistors with carrier board"]}},"Urls":{"Product Pages":["https://www.adafruit.com/products/2651"],"Datasheets":["https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BMP280-DS001-18.pdf"],"Schematics":["https://learn.adafruit.com/assets/26693"]}}}},{"Library":"button","Description":"Generic library for buttons & switches","Sensor Class":{"Button":{"Name":"Button","Description":"Basic UPM module for buttons and switches. Allows attaching a callback function to state transitions.","Aliases":["Grove - Button"],"Categories":["button"],"Connections":["gpio"],"Project Type":["prototyping","industrial"],"Manufacturers":["seeed","dfrobot","sparkfun","adafruit","generic"],"Kits":["gsk"],"Image":"button.jpg","Examples":{"Java":["ButtonSample.java","Button_intrSample.java"],"Python":["button.py"],"Node.js":["button.js"],"C++":["button.cxx"],"C":["button.c","button-intr.c"]},"Urls":{"Product Pages":["http://wiki.seeed.cc/Grove-Button/"],"Schematics":["https://easyeda.com/Seeed/Grove_Button_v1_2-f0f9f212fcee460ebe3703dab813e5c4"]}}}},{"Library":"buzzer","Description":"Generic library for piezoelectric buzzers","Sensor Class":{"Buzzer":{"Name":"Buzzer","Description":"This module defines the Buzzer interface for libbuzzer. This sensor can make different tones when connected to a pin capable of analog pulse-width modulation. It emits sound using a piezoelectric material that vibrates at different frequencies based on the input voltage.","Aliases":["Grove - Buzzer"],"Categories":["sound"],"Connections":["pwm"],"Project Type":["prototyping","industrial"],"Manufacturers":["seeed","dfrobot","sparkfun","adafruit","generic"],"Kits":["gsk"],"Image":"buzzer.jpg","Examples":{"Java":["BuzzerSample.java"],"Python":["buzzer.py"],"Node.js":["buzzer.js"],"C++":["buzzer.cxx"],"C":["buzzer.c"]},"Platforms":{"Intel Edison":{"Notes":["Might not work correctly with early versions of MRAA/UPM libraries, please use the latest versions."]}},"Urls":{"Product Pages":["http://wiki.seeed.cc/Grove-Buzzer/"],"Datasheets":["https://cdn.sparkfun.com/datasheets/Components/General/cem-1203-42-.pdf"],"Schematics":["https://easyeda.com/Seeed/Grove_Buzzer_v1_2-c713baf3c1774da39ce0c995544ce5da"]}}}},{"Library":"lp8860","Description":"LED Light Controller Library","Sensor Class":{"LP8860":{"Name":"API for LP8860 LED Lighting Controller","Description":"The LP8860-Q1 is an automotive high-efficiency LED driver with boost controller. It has 4 high-precision current sinks that can be controlled by a PWM input signal, an SPI or I2C master, or both ","Aliases":["lp8860"],"Categories":["light Controller"],"Connections":["i2c"],"Project Type":["prototyping","industrial"],"Manufacturers":["Texas Instruments"],"Image":"","Examples":{"C++":["lp8860.cxx"]},"Specifications":{"Vdd":{"unit":"v","low":3,"high":48},"Iavg":{"unit":"mA","low":1,"high":150},"Frequency Range":{"unit":"KHz","low":100,"high":2200},"Temperature Range":{"unit":"C","low":-40,"high":125}},"Platforms":{"Intel Joule Module":{"Notes":["Might need pull up resistors"]}},"Urls":{"Product Pages":["http://www.ti.com/product/LP8860-Q1"],"Datasheets":["http://www.ti.com/lit/ds/symlink/lp8860-q1.pdf"],"Schematics":["http://www.ti.com/general/docs/datasheetdiagram.tsp?genericPartNumber=LP8860-Q1&diagramId=66853"]}}}}]